{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/controllers/home.ctrl.js","src/js/controllers/posts.ctrl.js","src/js/controllers/users.ctrl.js","src/js/main.js","src/js/router.js","src/js/routes.js","src/js/templates/home.tpl.js","src/js/templates/posts.tpl.js","src/js/templates/users.tpl.js","src/js/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","homeCtrl","el","template","data","innerHTML","postsCtrl","usersCtrl","_utils","_routes","app","App","_classCallCheck","this","document","querySelector","router","_router2","default","addRoutes","routes","doRoute","route","$on","window","Router","allRoutes","path","controller","routePieces","location","hash","slice","split","formattedPcs","map","p","pieceCount","subRoute","baseRoute","_homeCtrl","_homeTpl","_usersCtrl","_usersTpl","_postsCtrl","_postsTpl","home","homeTpl","users","usersTpl","posts","postsTpl","html","_templateObject","target","event","handler","addEventListener","literalsArr","_len","arguments","cooked","Array","_key","result","forEach","cook","idx","lit","isArray","join"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction homeCtrl(el, template, data) {\n    el.innerHTML = template(data);\n}\n\nexport { homeCtrl };\n","// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction postsCtrl(el, template, data) {\n    el.innerHTML = template(data);\n}\n\nexport { postsCtrl };\n","// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction usersCtrl(el, template, data) {\n    el.innerHTML = template(data);\n}\n\nexport { usersCtrl };\n","/*\n    Main bootstrap module\n*/\n\nimport { $on }    from './utils';\nimport   Router   from './router';\nimport { routes } from './routes';\n\nclass App {\n    \n    constructor() {\n        this.el     = document.querySelector('#app-root');\n        this.router = new Router();\n    }\n\n}\n\nconst app = new App();\n\n// register all routes\napp.router.addRoutes(routes);\n\n// execute routes\nconst doRoute = () => {\n    app.router.route(app.el);\n};\n\n// register event listeners\n$on(window, 'load',       doRoute);\n$on(window, 'hashchange', doRoute);\n","/*\n    Basic router; uses browser hashChange events\n*/\n\nexport default class Router {\n    \n    constructor() {\n        this.routes = {};\n    }\n    \n\n    /** route registering function\n     *  @param   {object}    allRoutes\n     *  @param   {string}      .path         URL to route to\n     *  @param   {function}    .template     Template function\n     *  @param   {function}    .controller   Controller function\n    */\n    addRoutes(allRoutes) {\n        \n        for (let route in allRoutes) {\n            let r = allRoutes[route];\n            this.routes[r.path] = {\n                template   : r.template,\n                controller : r.controller\n            };\n        }\n        \n    }\n    \n    \n    /** router\n     *  @param   {string}   el   Target DOM element for route content\n    */\n    route(el) {\n        \n        const hash_frag    = location.hash.slice(1) || '/';\n        const delimiter    = '/';\n        const routePieces  = hash_frag.split(delimiter);\n        const formattedPcs = routePieces.map( p => '/' + p );\n        const pieceCount   = routePieces.length;\n        const subRoute     = routePieces[3] || '';\n        const baseRoute    = pieceCount > 3 ? formattedPcs[1] + formattedPcs[2] : formattedPcs[1];\n        \n        // pick correct route object from /routes\n        let route = this.routes[baseRoute];\n        \n        // redirect to /home on invalid routes\n        if (!route) { route = this.routes['/']; }\n        \n        // given an element & controller, execute the route\n        if (el && route.controller) {\n            route.controller(el, route.template, subRoute);\n        }\n\n    }\n}\n","/*\n    Route definitions\n*/\n\n/* ================================= SETUP ================================= */\n\nimport { homeCtrl }  from './controllers/home.ctrl.js';\nimport { homeTpl }   from './templates/home.tpl.js';\n\nimport { usersCtrl } from './controllers/users.ctrl.js';\nimport { usersTpl }  from './templates/users.tpl.js';\n\nimport { postsCtrl } from './controllers/posts.ctrl.js';\nimport { postsTpl }  from './templates/posts.tpl.js';\n\n\n/* ================================ ROUTES ================================= */\n\nconst routes = {\n    \n    home : {\n        path       : '/',\n        template   : homeTpl,\n        controller : homeCtrl\n    },\n    \n    users : {\n        path       : '/users',\n        template   : usersTpl,\n        controller : usersCtrl\n    },\n    \n    posts : {\n        path       : '/posts',\n        template   : postsTpl,\n        controller : postsCtrl\n    }\n\n};\n\n\n/* ================================ EXPORTS ================================ */\n\nexport { routes };\n","import { html } from '../utils';\n\nconst homeTpl = (data) => html`\n    <h1>Home</h1>\n`;\n\nexport { homeTpl };","import { html } from '../utils';\n\nconst postsTpl = (data) => html`\n    <h1>Posts</h1>\n`;\n\nexport { postsTpl };\n","import { html } from '../utils';\n\nconst usersTpl = (data) => html`\n    <h1>Users</h1>\n`;\n\nexport { usersTpl };\n","/*\n    Utilities\n*/\n\n/** Register a handler to an event emitted by a target\n *  @param {object}    target    DOM element object\n *  @param {string}    event     Emitted event name\n *  @param {function}  handler   function to fire on event\n*/\nconst $on = (target, event, handler) => {\n    return target.addEventListener(event, handler);\n};\n\n\n/** HTML templating utility\n *  @param   {array}   literalsArr   Array of all the literal text\n *  @param   {array}   ...cooked     Rest param: all the processed expressions\n *  @returns                         The processed string\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, idx) => {\n        let lit = literalsArr[idx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* ================================ EXPORTS ================================ */\n\nexport { $on, html };\n"]}